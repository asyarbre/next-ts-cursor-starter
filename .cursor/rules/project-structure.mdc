---
alwaysApply: true
---

# Project Structure and Organization

This is a Next.js 15 project using the App Router with TypeScript, Tailwind CSS v4, and ShadCN/UI components.

## Directory Structure

- **`src/app/`** - App Router pages and layouts (main entry: [layout.tsx](mdc:src/app/layout.tsx))
- **`src/components/`** - Reusable React components
- **`src/components/ui/`** - ShadCN/UI base components (auto-generated)
- **`src/lib/`** - Utility functions and configurations ([utils.ts](mdc:src/lib/utils.ts))
- **`src/hooks/`** - Custom React hooks
- **`public/`** - Static assets (images, icons, etc.)

## File Naming Conventions

- Use **kebab-case** for directories and files
- Use **PascalCase** for React component files (e.g., `UserProfile.tsx`)
- Use **camelCase** for utility functions and hooks
- Page files should be named `page.tsx` (App Router convention)
- Layout files should be named `layout.tsx`
- Loading files should be named `loading.tsx`
- Error files should be named `error.tsx`

## Import Path Aliases

Use the configured aliases from [tsconfig.json](mdc:tsconfig.json):
- `@/*` maps to `src/*`
- `@/components` for components
- `@/lib/utils` for utilities
- `@/components/ui` for UI components
- `@/lib` for library code
- `@/hooks` for custom hooks

## Component Organization

1. **Page Components**: Place in `src/app/` following App Router structure
2. **Reusable Components**: Place in `src/components/` with descriptive names
3. **UI Components**: Use ShadCN/UI components in `src/components/ui/` (managed by CLI)
4. **Component Files**: Export default component, include types in same file when simple

## Configuration Files

- [package.json](mdc:package.json) - Dependencies and scripts
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration with path aliases
- [components.json](mdc:components.json) - ShadCN/UI configuration
- [biome.json](mdc:biome.json) - Linting and formatting rules
- [next.config.ts](mdc:next.config.ts) - Next.js configuration